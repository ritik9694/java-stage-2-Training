package com.cognizant.boot.rest.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cognizant.boot.rest.model.Book;
import com.cognizant.boot.rest.servce.impl.BookServiceImpl;

@RestController
@RequestMapping("/book")
public class BookController {

	private BookServiceImpl bookServiceImpl;

	@Autowired
	public BookController(BookServiceImpl bookServiceImpl) {
		super();
		this.bookServiceImpl = bookServiceImpl;
	}
	
	@PostMapping("/save")
	public ResponseEntity<?> addNewBook(@RequestBody Book book){
		boolean addBookStatus=bookServiceImpl.saveBooks(book);
		if(addBookStatus) {
			return new ResponseEntity<Void>(HttpStatus.CREATED);
		}
		return ResponseEntity.badRequest().body("book not added");
	}
	
	@GetMapping("/search/{bookId}")
	public ResponseEntity<?> searchBookById(@PathVariable Integer bookId){
		Book searchedBook=bookServiceImpl.findBookById(bookId);
		if(searchedBook != null) {
			return ResponseEntity.ok().body(searchedBook);
		}
		return ResponseEntity.badRequest().body("no matching book for book id: "+bookId);
	}
	
	@GetMapping("/all")
	public ResponseEntity<?>searchAllBook (){
		List<Book> allBook =bookServiceImpl.findAll();
		return ResponseEntity.ok().body(allBook);
	}
	
	@DeleteMapping("/delete/{bookId}")
	public ResponseEntity<?> deleteBook(@PathVariable Integer bookId){
		Boolean dltBk=bookServiceImpl.deleteBookById(bookId);
		if(dltBk)
		      return ResponseEntity.ok().body(dltBk);
		
		return ResponseEntity.badRequest().body("Book not deleted with Id: " +bookId);
	}
}
